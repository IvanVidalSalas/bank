DROP DATABASE IF EXISTS BANK;
CREATE DATABASE BANK;
USE BANK;

CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME VARCHAR(30),
    LAST_NAME VARCHAR(30),
    ADDRESS VARCHAR(50),
    EMAIL VARCHAR(50)
);

CREATE TABLE ACCOUNT (
    ACCOUNT_ID INT AUTO_INCREMENT,
    CUSTOMER_ID INT,
    ACCOUNT_TYPE VARCHAR(20),
    BALANCE INT(10),
    PRIMARY KEY (ACCOUNT_ID, CUSTOMER_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE
);

CREATE TABLE TRANSACTION
(
    TRANSACTION_ID   INT PRIMARY KEY AUTO_INCREMENT,
    CUSTOMER_ID      INT,
    TRANSACTION_TYPE VARCHAR(20),
    AMOUNT           DECIMAL(10),
    TRANSACTION_DATE DATE,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE
);

CREATE TABLE WORKER (
    WORKER_ID INT PRIMARY KEY AUTO_INCREMENT,
    TRANSACTION_ID INT,
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTION(TRANSACTION_ID) ON DELETE CASCADE
);

CREATE TABLE LOAN (
    CUSTOMER_ID INT PRIMARY KEY,
    LOAN_DATE DATE,
    RETURN_DATE DATE,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE
);

CREATE TABLE WORKER_ACCOUNT (
    WORKER_ID INT,
    ACCOUNT_ID INT,
    PRIMARY KEY (WORKER_ID, ACCOUNT_ID),
    FOREIGN KEY (WORKER_ID) REFERENCES WORKER(WORKER_ID) ON DELETE CASCADE,
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE
);

